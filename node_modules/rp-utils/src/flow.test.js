const { Flow, Left, Right, Nullable, Safely } = require('./flow');

Flow(1)
.map(x => x + 1)
.fold(x => test('It should flow values', () => {
    expect(x).toBe(2);
}));

var x = { a: function () { return 1; } }

Nullable(x.a)
.map(fn => fn())
.fold(
    e => test('It should flow Non Null values', () => {
        expect(false).toBe(true);
    }),
    x => test('It should flow Non Null values', () => {
        expect(x).toBe(1);
    }));

Nullable(x.b)
.map(fn => fn())
.fold(
    e => test('It should skip chain if null', () => {
        expect(e).toBe(undefined);
    }),
    x => test('It should skip chain if null', () => {
        expect(false).toBe(true);
    }));

Safely(() => x.b.a)
.map(x => x + 1)
.fold(
    e => test('It should fail chain if Error', () => {
        expect(e).toThrow();
    }),
    x => test('It should fail chain if Error', () => {
        expect(false).toBe(true);
    })
)